1
Reduce
Question: Write a program that compute the sum of an array in parallel using the OpenMP for loop
construct. Measure the time computing the sum takes. Write the program so that you can control the
length of the array, the number of thread and the scheduling policy; passed as parameters to main. Output
the value of the reduction to stdout and the time taken to compute it to stderr. Use the template of
reduce/reduce.cpp; note that the array to reduce is obtain by calling the provided generateReduceData
function. Test it works with make test.
Question: Run the code on mamba, in the reduce/ directory, using make bench. Plot speedup charts with
make plot.
2
Numerical Integration
Question: Take your sequential code to compute numerical integration which is present in sequential/numint_seq.cpp.
Modify it to do the numerical integration in parallel with the OpenMP loop construct. Output the value
of the integration to stdout and the time taken to compute it to stderr. Use the template provided in
numint/numint.cpp. You can test your code with make test.
Question: Run the code on mamba, in the numint/ directory, using make bench.

3
Prefix Sum
Here is a sequential Prefix Sum:
void prefixsum ( int * arr , int n , int * pr ) {
pr [0] = 0;
for ( int i =0; i < n ; ++ i ) {
pr [ i +1] = prefix [ i ] + arr [ i ];
}
}
Question: Provide the structure of the parallel algorithm for Prefix Sum. (Highly recommend the “cut in
P and fix it” approach”.)
Question: Implement a parallel function using OpenMP parallel loop constructs to compute the prefix
sum of an array. Pick the scheduling policy you feel is appropriate. Output the time it took on stderr.

4
Merge Sort
Question: Provide the structure of the parallel algorithm for Merge Sort that does not try to make Merge
parallel. How would you map that parallelism to OpenMP’s looping construct?
Question: Implement a parallel function using OpenMP parallel loop constructs to perform merge sort
on an array of integer. Use the template of mergesort/mergesort.cpp. Output the time it took on
stderr. Note that the data is generated by function generateMergeSortData and the results is checked by
checkMergeSortResult.
Question: Run the code on mamba, in the mergesort/ directory, using make bench. And then plot the
results using make plot.
